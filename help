# Check if the router is properly exported from routes.js
cd /root/Core-Repository/backend
tail -10 routes.js | grep -E "(module.exports|router)"


# Test if the login route is actually registered
node -e "
const router = require('./routes');
console.log('Router methods:', router.stack?.map(r => r.route?.path + ' ' + Object.keys(r.route?.methods || {})).filter(Boolean));
"

# Test if the login route is actually registered
node -e "
const router = require('./routes');
console.log('Router methods:', router.stack?.map(r => r.route?.path + ' ' + Object.keys(r.route?.methods || {})).filter(Boolean));
"


# Check what routes.js actually contains around the login definition
cd /root/Core-Repository/backend
grep -n -A 10 -B 5 "router.post.*login" routes.js




# Test different HTTP methods
curl -X GET http://172.30.252.118:4000/login
curl -X POST http://172.30.252.118:4000/login  
curl -X PUT http://172.30.252.118:4000/login


# Test with and without trailing slash
curl -X POST http://172.30.252.118:4000/login/
curl -X POST http://172.30.252.118:4000//login

# Test case sensitivity
curl -X POST http://172.30.252.118:4000/Login


cd /root/Core-Repository/backend
node -e "
const routes = require('./routes');
console.log('Router type:', typeof routes);
console.log('Router constructor:', routes.constructor.name);
console.log('Has stack:', !!routes.stack);
if (routes.stack) {
  console.log('Number of routes:', routes.stack.length);
  routes.stack.forEach((layer, i) => {
    if (layer.route) {
      console.log(`Route ${i}: ${layer.route.path} [${Object.keys(layer.route.methods).join(',')}]`);
    }
  });
}
"