{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lines\\\\OneDrive\\\\Code\\\\Core-Repository\\\\frontend\\\\src\\\\ExchangePricingTool.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, Typography, Grid, TextField, Button, FormControl, InputLabel, Select, MenuItem, Card, CardContent, CardHeader, Divider, Alert, CircularProgress, Autocomplete, FormControlLabel, Switch, Dialog, DialogTitle, DialogContent, DialogActions, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, IconButton, Pagination, InputAdornment } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport CalculateIcon from '@mui/icons-material/Calculate';\nimport HistoryIcon from '@mui/icons-material/History';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EmailIcon from '@mui/icons-material/Email';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useAuth } from './AuthContext';\nimport { exchangePricingApi } from './api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExchangePricingTool = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n\n  // Check if user can view pricing logs (not read-only)\n  const canViewPricingLogs = user && user.role !== 'read_only';\n\n  // Check if user can manage logs (admin or provisioner)\n  const canManageLogs = user && ['administrator', 'provisioner'].includes(user.role);\n\n  // Form state\n  const [formData, setFormData] = useState({\n    requestor_name: (user === null || user === void 0 ? void 0 : user.full_name) || '',\n    customer_name: '',\n    region: '',\n    exchange_id: '',\n    exchange_name: '',\n    feed_id: '',\n    feed_name: '',\n    desired_sell_price: '',\n    currency_requested: '',\n    order_entry_required: false,\n    delivery_datacenter: ''\n  });\n\n  // Data states\n  const [availableRegions, setAvailableRegions] = useState([]);\n  const [availableExchanges, setAvailableExchanges] = useState([]);\n  const [availableFeeds, setAvailableFeeds] = useState([]);\n  const [availableCurrencies, setAvailableCurrencies] = useState([]);\n  const [availableDatacenters, setAvailableDatacenters] = useState([]);\n\n  // UI states\n  const [loading, setLoading] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState('');\n  const [showHistory, setShowHistory] = useState(false);\n\n  // History states\n  const [quoteHistory, setQuoteHistory] = useState([]);\n  const [historyLoading, setHistoryLoading] = useState(false);\n  const [historyPage, setHistoryPage] = useState(1);\n  const [historyTotal, setHistoryTotal] = useState(0);\n  const [historySearch, setHistorySearch] = useState('');\n\n  // Load initial data\n  useEffect(() => {\n    loadRegions();\n    loadCurrencies();\n  }, []);\n\n  // Update requestor name when user changes\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.full_name) {\n      setFormData(prev => ({\n        ...prev,\n        requestor_name: user.full_name\n      }));\n    }\n  }, [user]);\n\n  // Validate form\n  useEffect(() => {\n    const isValid = formData.customer_name.trim() && formData.region && formData.exchange_id && formData.feed_id && formData.desired_sell_price && parseFloat(formData.desired_sell_price) > 0 && formData.currency_requested && formData.delivery_datacenter && (formData.order_entry_required === true || formData.order_entry_required === false);\n    setFormValid(isValid);\n  }, [formData]);\n  const loadRegions = async () => {\n    try {\n      const regions = await exchangePricingApi.getRegions();\n      setAvailableRegions(regions);\n    } catch (error) {\n      console.error('Failed to load regions:', error);\n      setError('Failed to load available regions');\n    }\n  };\n  const loadExchanges = async region => {\n    try {\n      const exchanges = await exchangePricingApi.getExchanges(region);\n      setAvailableExchanges(exchanges);\n    } catch (error) {\n      console.error('Failed to load exchanges:', error);\n      setError('Failed to load exchanges for this region');\n    }\n  };\n  const loadFeeds = async exchangeId => {\n    try {\n      const feeds = await exchangePricingApi.getFeeds(exchangeId);\n      setAvailableFeeds(feeds);\n    } catch (error) {\n      console.error('Failed to load feeds:', error);\n      setError('Failed to load feeds for this exchange');\n    }\n  };\n  const loadCurrencies = async () => {\n    try {\n      const currencies = await exchangePricingApi.getCurrencies();\n      setAvailableCurrencies(currencies);\n    } catch (error) {\n      console.error('Failed to load currencies:', error);\n      setError('Failed to load available currencies');\n    }\n  };\n  const loadDatacenters = async region => {\n    try {\n      const datacenters = await exchangePricingApi.getDatacenters(region);\n      setAvailableDatacenters(datacenters);\n    } catch (error) {\n      console.error('Failed to load datacenters:', error);\n      setError('Failed to load datacenters for this region');\n    }\n  };\n  const loadQuoteHistory = async (page = 1, search = '') => {\n    setHistoryLoading(true);\n    try {\n      const response = await exchangePricingApi.getQuoteHistory({\n        page,\n        limit: 10,\n        search\n      });\n      setQuoteHistory(response.quotes);\n      setHistoryTotal(response.totalCount);\n    } catch (error) {\n      console.error('Failed to load quote history:', error);\n      setError('Failed to load quote history');\n    } finally {\n      setHistoryLoading(false);\n    }\n  };\n  const loadAuditLogs = async () => {\n    setAuditLogsLoading(true);\n    try {\n      const logs = await exchangePricingApi.getAuditLogs({\n        limit: 100\n      });\n      setAuditLogs(logs);\n    } catch (error) {\n      console.error('Failed to load audit logs:', error);\n      setError('Failed to load pricing logs');\n    } finally {\n      setAuditLogsLoading(false);\n    }\n  };\n  const handleClearAuditLogs = async () => {\n    if (!window.confirm('Are you sure you want to clear all exchange pricing logs? This action cannot be undone.')) {\n      return;\n    }\n    try {\n      await exchangePricingApi.clearAuditLogs();\n      setAuditLogs([]);\n      setSuccess('Exchange pricing logs cleared successfully');\n    } catch (err) {\n      setError('Failed to clear pricing logs: ' + err.message);\n    }\n  };\n  const handleExportAuditLogs = () => {\n    try {\n      exchangePricingApi.exportAuditLogs();\n      setSuccess('Exchange pricing logs export started');\n    } catch (err) {\n      setError('Failed to export pricing logs: ' + err.message);\n    }\n  };\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    setError('');\n\n    // Handle cascading dropdowns\n    if (field === 'region') {\n      // Reset dependent fields\n      setFormData(prev => ({\n        ...prev,\n        region: value,\n        exchange_id: '',\n        exchange_name: '',\n        feed_id: '',\n        feed_name: '',\n        delivery_datacenter: ''\n      }));\n      setAvailableExchanges([]);\n      setAvailableFeeds([]);\n      setAvailableDatacenters([]);\n      if (value) {\n        loadExchanges(value);\n        loadDatacenters(value);\n      }\n    } else if (field === 'exchange_id') {\n      const selectedExchange = availableExchanges.find(ex => ex.id === value);\n      setFormData(prev => ({\n        ...prev,\n        exchange_id: value,\n        exchange_name: selectedExchange ? selectedExchange.exchange_name : '',\n        feed_id: '',\n        feed_name: ''\n      }));\n      setAvailableFeeds([]);\n      if (value) {\n        loadFeeds(value);\n      }\n    } else if (field === 'feed_id') {\n      const selectedFeed = availableFeeds.find(feed => feed.id === value);\n      setFormData(prev => ({\n        ...prev,\n        feed_id: value,\n        feed_name: selectedFeed ? selectedFeed.feed_name : ''\n      }));\n    }\n  };\n  const handleCheckResults = async () => {\n    if (!formValid) return;\n    setLoading(true);\n    setError('');\n    setResults(null);\n    try {\n      const result = await exchangePricingApi.createQuote(formData);\n      setResults(result);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Quote calculation failed:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to calculate quote');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleResetForm = () => {\n    setFormData({\n      requestor_name: (user === null || user === void 0 ? void 0 : user.full_name) || '',\n      customer_name: '',\n      region: '',\n      exchange_id: '',\n      exchange_name: '',\n      feed_id: '',\n      feed_name: '',\n      desired_sell_price: '',\n      currency_requested: '',\n      order_entry_required: false,\n      delivery_datacenter: ''\n    });\n    setResults(null);\n    setError('');\n    setAvailableExchanges([]);\n    setAvailableFeeds([]);\n    setAvailableDatacenters([]);\n  };\n  const formatCurrency = (amount, currency) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency || 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  const convertFromUSD = (usdAmount, exchangeRate, targetCurrency) => {\n    if (targetCurrency === 'USD') {\n      return usdAmount;\n    }\n    return usdAmount * exchangeRate;\n  };\n  const handleEmailExport = () => {\n    if (!results) return;\n    const pricingDisclaimer = `\nAll Pricing is subject to IPC standard terms and conditions.\nThis quotation is valid for 90 days\nAll Pricing is budgetary and subject to finalised design, survey and facility/feasibility checks.\nAll Pricing is exclusive of any applicable Taxes and Surcharges.\nAny additional 3rd Party costs incurred on order of the service will be chargeable to the customer, including but not limited to cross connects, additional cabling, out of hours charges, etc\nUnless otherwise stated any additional costs incurred for out of hours work will be chargeable to the customer.\nBudgetary price is designed for wires only delivery. Customer to provide own cross connects to IPC market data environment.\n    `.trim();\n    const emailBody = `Exchange Feed Pricing Quote\n\n${results.approval_status}\n\nCustomer Name: ${results.customer_name}\nFeed: ${results.exchange_name} - ${results.feed_name}\nFeed NRC: ${formatCurrency(convertFromUSD(1000, results.exchange_rate, results.currency_requested), results.currency_requested)}\nDesired Sell Price: ${formatCurrency(results.desired_sell_price, results.currency_requested)}\nPass Through Fees: ${results.pass_through_fees && results.pass_through_fees > 0 ? 'Yes' : 'No'}\nISF A: ${results.isf_a || 'Not specified'}\nISF B: ${results.isf_b || 'Not specified'}\nBandwidth: ${results.bandwidth || 'Not specified'}${results.order_entry_required ? `\nOrder Entry NRC: ${formatCurrency(convertFromUSD(500, results.exchange_rate, results.currency_requested), results.currency_requested)}\nOrder Entry Cost: ${results.order_entry_cost ? formatCurrency(convertFromUSD(results.order_entry_cost, results.exchange_rate, results.currency_requested), results.currency_requested) : 'Not specified'}\nOrder Entry ISF: ${results.order_entry_isf || 'Not specified'}` : ''}\nDelivery Datacenter: ${results.delivery_datacenter}\n\n${pricingDisclaimer}`;\n    const subject = `${results.customer_name} - ${results.exchange_name} - ${results.feed_name} - Pricing`;\n    const mailtoUrl = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(emailBody)}`;\n    window.open(mailtoUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Exchange Feed Pricing Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      gutterBottom: true,\n      sx: {\n        mb: 3\n      },\n      children: [\"Ensure corresponding QR is raised for pricing confirmation and design. Include requested sell price within QR.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 119\n      }, this), \"Pricing valid for combined A + B feeds for delivery to IPC Tier 1 Datacenters within same region as feed source.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 121\n      }, this), \"Order Entry is available for each listed market - Unicast 10Mb - Price dependant on market.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 100\n      }, this), \"DR feeds may be available and further information is available via quoting process.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 92\n      }, this), \"Retransmission included as standard if available\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 57\n      }, this), \"For detailed service standards, please see IPC Connexus Extranet standards or refer to your SE.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Quote Request Form\",\n            action: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              size: \"small\",\n              onClick: handleResetForm,\n              startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 30\n              }, this),\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Requestor Name\",\n                  value: formData.requestor_name,\n                  InputProps: {\n                    readOnly: true\n                  },\n                  helperText: \"Auto-filled from your profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Customer Name\",\n                  value: formData.customer_name,\n                  onChange: e => handleInputChange('customer_name', e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"Select Region\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: formData.region,\n                    label: \"Select Region\",\n                    onChange: e => handleInputChange('region', e.target.value),\n                    children: availableRegions.map(region => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: region,\n                      children: region\n                    }, region, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  disabled: !formData.region,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"Select Exchange\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: formData.exchange_id,\n                    label: \"Select Exchange\",\n                    onChange: e => handleInputChange('exchange_id', e.target.value),\n                    children: availableExchanges.map(exchange => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: exchange.id,\n                      children: exchange.exchange_name\n                    }, exchange.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  disabled: !formData.exchange_id,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"Select Feed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: formData.feed_id,\n                    label: \"Select Feed\",\n                    onChange: e => handleInputChange('feed_id', e.target.value),\n                    children: availableFeeds.map(feed => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: feed.id,\n                      children: feed.feed_name\n                    }, feed.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Desired Sell Price\",\n                  type: \"number\",\n                  inputProps: {\n                    min: 0,\n                    step: 0.01\n                  },\n                  value: formData.desired_sell_price,\n                  onChange: e => handleInputChange('desired_sell_price', e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"Currency Requested\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: formData.currency_requested,\n                    label: \"Currency Requested\",\n                    onChange: e => handleInputChange('currency_requested', e.target.value),\n                    children: availableCurrencies.map(currency => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: currency.currency_code,\n                      children: [currency.currency_code, \" - \", currency.currency_name]\n                    }, currency.currency_code, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: formData.order_entry_required,\n                    onChange: e => handleInputChange('order_entry_required', e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 23\n                  }, this),\n                  label: \"Order Entry Required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  disabled: !formData.region,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"Delivery Datacenter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: formData.delivery_datacenter,\n                    label: \"Delivery Datacenter\",\n                    onChange: e => handleInputChange('delivery_datacenter', e.target.value),\n                    children: availableDatacenters.map(datacenter => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: datacenter.location_code,\n                      children: [datacenter.location_code, \" - \", datacenter.location_name]\n                    }, datacenter.location_code, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 2,\n                    justifyContent: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"large\",\n                    onClick: handleCheckResults,\n                    disabled: !formValid || loading,\n                    startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                      size: 20\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 44\n                    }, this) : /*#__PURE__*/_jsxDEV(CalculateIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 77\n                    }, this),\n                    children: loading ? 'Calculating...' : 'Check Results'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    size: \"large\",\n                    onClick: () => {\n                      setShowHistory(true);\n                      loadQuoteHistory(1, historySearch);\n                    },\n                    startIcon: /*#__PURE__*/_jsxDEV(HistoryIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 519,\n                      columnNumber: 34\n                    }, this),\n                    children: \"View History\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 4,\n        children: results && /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Quote Results\",\n            avatar: results.is_approved ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n              color: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 21\n            }, this),\n            action: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              size: \"small\",\n              onClick: handleEmailExport,\n              startIcon: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 32\n              }, this),\n              children: \"Export to Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  severity: results.is_approved ? \"success\" : \"error\",\n                  sx: {\n                    mb: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    fontWeight: \"bold\",\n                    children: results.is_approved ? \"Approved\" : \"Not Approved\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"Customer Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: results.customer_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"Feed (Exchange Name - Feed Name)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [results.exchange_name, \" - \", results.feed_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"Feed NRC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: formatCurrency(convertFromUSD(1000, results.exchange_rate, results.currency_requested), results.currency_requested)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"Desired Sell Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: formatCurrency(results.desired_sell_price, results.currency_requested)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"Pass Through Fees\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: results.pass_through_fees && results.pass_through_fees > 0 ? 'Yes' : 'No'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"ISF A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: results.isf_a || 'Not specified'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"ISF B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: results.isf_b || 'Not specified'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"Bandwidth\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: results.bandwidth || 'Not specified'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 19\n              }, this), results.order_entry_required && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"Order Entry NRC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: formatCurrency(convertFromUSD(500, results.exchange_rate, results.currency_requested), results.currency_requested)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 21\n              }, this), results.order_entry_required && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Order Entry Cost\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: results.order_entry_cost ? formatCurrency(convertFromUSD(results.order_entry_cost, results.exchange_rate, results.currency_requested), results.currency_requested) : 'Not specified'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Order Entry ISF\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: results.order_entry_isf || 'Not specified'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"Delivery Datacenter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: results.delivery_datacenter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showHistory,\n      onClose: () => setShowHistory(false),\n      maxWidth: \"lg\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 2\n            },\n            children: [\"Quote History\", canManageLogs && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"error\",\n              size: \"small\",\n              onClick: handleClearQuoteHistory,\n              startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 30\n              }, this),\n              children: \"Clear History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            placeholder: \"Search quotes...\",\n            value: historySearch,\n            onChange: e => setHistorySearch(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                loadQuoteHistory(1, historySearch);\n              }\n            },\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: historyLoading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 698,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Customer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 699,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Exchange\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Feed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Sell Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Requestor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: quoteHistory.map(quote => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: formatDate(quote.created_at)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 710,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: quote.customer_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: quote.exchange_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 712,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: quote.feed_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: formatCurrency(quote.desired_sell_price, quote.currency_requested)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 714,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: quote.is_approved ? 'Approved' : 'Not Approved',\n                      color: quote.is_approved ? 'success' : 'error',\n                      size: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 718,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 717,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: quote.requestor_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 724,\n                    columnNumber: 25\n                  }, this)]\n                }, quote.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this), historyTotal > 10 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              count: Math.ceil(historyTotal / 10),\n              page: historyPage,\n              onChange: (e, page) => {\n                setHistoryPage(page);\n                loadQuoteHistory(page, historySearch);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowHistory(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showAuditLogs,\n      onClose: () => setShowAuditLogs(false),\n      maxWidth: \"xl\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [\"Exchange Pricing Logs\", /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 2,\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              label: `${auditLogs.length} entries`,\n              color: \"info\",\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 15\n            }, this), canManageLogs && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                size: \"small\",\n                onClick: handleExportAuditLogs,\n                startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 32\n                }, this),\n                children: \"Export CSV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                size: \"small\",\n                onClick: handleClearAuditLogs,\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 32\n                }, this),\n                children: \"Clear Logs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: auditLogsLoading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Timestamp\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 796,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"User\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 797,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Input Parameters\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 798,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Results Summary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 799,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: auditLogs.map(log => {\n                var _log$pricing_data$cal, _log$pricing_data$cal2, _log$pricing_data$cal3;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: new Date(log.timestamp).toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 806,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 805,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: log.user_name || 'Unknown User'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      maxWidth: 400\n                    },\n                    children: log.parameters && /*#__PURE__*/_jsxDEV(Box, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Customer:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 818,\n                          columnNumber: 59\n                        }, this), \" \", log.parameters.customer_name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 818,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 818,\n                        columnNumber: 129\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Exchange:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 819,\n                          columnNumber: 59\n                        }, this), \" \", log.parameters.exchange_name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 819,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 819,\n                        columnNumber: 129\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Feed:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 820,\n                          columnNumber: 59\n                        }, this), \" \", log.parameters.feed_name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 820,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 820,\n                        columnNumber: 121\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Price:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 821,\n                          columnNumber: 59\n                        }, this), \" \", formatCurrency(log.parameters.desired_sell_price, log.parameters.currency_requested)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 821,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 821,\n                        columnNumber: 182\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Order Entry:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 822,\n                          columnNumber: 59\n                        }, this), \" \", log.parameters.order_entry_required ? 'Yes' : 'No']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 822,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 817,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      maxWidth: 300\n                    },\n                    children: log.pricing_data && log.pricing_data.calculationResults && /*#__PURE__*/_jsxDEV(Box, {\n                      children: [/*#__PURE__*/_jsxDEV(Chip, {\n                        label: log.pricing_data.calculationResults.is_approved ? 'Approved' : 'Not Approved',\n                        color: log.pricing_data.calculationResults.is_approved ? 'success' : 'error',\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 829,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 833,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"USD Price:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 834,\n                          columnNumber: 59\n                        }, this), \" $\", (_log$pricing_data$cal = log.pricing_data.calculationResults.desired_sell_price_usd) === null || _log$pricing_data$cal === void 0 ? void 0 : _log$pricing_data$cal.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 834,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 834,\n                        columnNumber: 173\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Min Cost:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 835,\n                          columnNumber: 59\n                        }, this), \" $\", (_log$pricing_data$cal2 = log.pricing_data.calculationResults.feed_min_cost) === null || _log$pricing_data$cal2 === void 0 ? void 0 : _log$pricing_data$cal2.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 835,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 835,\n                        columnNumber: 163\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Difference:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 836,\n                          columnNumber: 59\n                        }, this), \" $\", (_log$pricing_data$cal3 = log.pricing_data.calculationResults.price_difference) === null || _log$pricing_data$cal3 === void 0 ? void 0 : _log$pricing_data$cal3.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 836,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 828,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 826,\n                    columnNumber: 23\n                  }, this)]\n                }, log.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 804,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowAuditLogs(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n_s(ExchangePricingTool, \"DmCzHjCrFCAlI/T0em2JyjfCd20=\", false, function () {\n  return [useAuth];\n});\n_c = ExchangePricingTool;\nexport default ExchangePricingTool;\nvar _c;\n$RefreshReg$(_c, \"ExchangePricingTool\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","Grid","TextField","Button","FormControl","InputLabel","Select","MenuItem","Card","CardContent","CardHeader","Divider","Alert","CircularProgress","Autocomplete","FormControlLabel","Switch","Dialog","DialogTitle","DialogContent","DialogActions","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","IconButton","Pagination","InputAdornment","SearchIcon","CalculateIcon","HistoryIcon","CheckCircleIcon","CancelIcon","RefreshIcon","EmailIcon","DownloadIcon","DeleteIcon","useAuth","exchangePricingApi","jsxDEV","_jsxDEV","Fragment","_Fragment","ExchangePricingTool","_s","user","canViewPricingLogs","role","canManageLogs","includes","formData","setFormData","requestor_name","full_name","customer_name","region","exchange_id","exchange_name","feed_id","feed_name","desired_sell_price","currency_requested","order_entry_required","delivery_datacenter","availableRegions","setAvailableRegions","availableExchanges","setAvailableExchanges","availableFeeds","setAvailableFeeds","availableCurrencies","setAvailableCurrencies","availableDatacenters","setAvailableDatacenters","loading","setLoading","formValid","setFormValid","results","setResults","error","setError","showHistory","setShowHistory","quoteHistory","setQuoteHistory","historyLoading","setHistoryLoading","historyPage","setHistoryPage","historyTotal","setHistoryTotal","historySearch","setHistorySearch","loadRegions","loadCurrencies","prev","isValid","trim","parseFloat","regions","getRegions","console","loadExchanges","exchanges","getExchanges","loadFeeds","exchangeId","feeds","getFeeds","currencies","getCurrencies","loadDatacenters","datacenters","getDatacenters","loadQuoteHistory","page","search","response","getQuoteHistory","limit","quotes","totalCount","loadAuditLogs","setAuditLogsLoading","logs","getAuditLogs","setAuditLogs","handleClearAuditLogs","window","confirm","clearAuditLogs","setSuccess","err","message","handleExportAuditLogs","exportAuditLogs","handleInputChange","field","value","selectedExchange","find","ex","id","selectedFeed","feed","handleCheckResults","result","createQuote","_error$response","_error$response$data","data","handleResetForm","formatCurrency","amount","currency","Intl","NumberFormat","style","minimumFractionDigits","format","formatDate","dateString","Date","toLocaleString","convertFromUSD","usdAmount","exchangeRate","targetCurrency","handleEmailExport","pricingDisclaimer","emailBody","approval_status","exchange_rate","pass_through_fees","isf_a","isf_b","bandwidth","order_entry_cost","order_entry_isf","subject","mailtoUrl","encodeURIComponent","open","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","mb","severity","container","spacing","item","xs","lg","title","action","size","onClick","startIcon","sm","fullWidth","label","InputProps","readOnly","helperText","onChange","e","target","required","map","disabled","exchange","type","inputProps","min","step","currency_code","currency_name","control","checked","datacenter","location_code","location_name","display","gap","justifyContent","avatar","is_approved","fontWeight","onClose","maxWidth","alignItems","handleClearQuoteHistory","placeholder","onKeyPress","key","startAdornment","position","component","quote","created_at","mt","count","Math","ceil","showAuditLogs","setShowAuditLogs","auditLogs","length","auditLogsLoading","log","_log$pricing_data$cal","_log$pricing_data$cal2","_log$pricing_data$cal3","timestamp","user_name","parameters","pricing_data","calculationResults","desired_sell_price_usd","toFixed","feed_min_cost","price_difference","_c","$RefreshReg$"],"sources":["C:/Users/lines/OneDrive/Code/Core-Repository/frontend/src/ExchangePricingTool.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box, Paper, Typography, Grid, TextField, Button, FormControl, InputLabel, Select, MenuItem,\n  Card, CardContent, CardHeader, Divider, Alert, CircularProgress, Autocomplete,\n  FormControlLabel, Switch, Dialog, DialogTitle, DialogContent, DialogActions,\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, IconButton,\n  Pagination, InputAdornment\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport CalculateIcon from '@mui/icons-material/Calculate';\nimport HistoryIcon from '@mui/icons-material/History';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EmailIcon from '@mui/icons-material/Email';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useAuth } from './AuthContext';\nimport { exchangePricingApi } from './api';\n\nconst ExchangePricingTool = () => {\n  const { user } = useAuth();\n  \n  // Check if user can view pricing logs (not read-only)\n  const canViewPricingLogs = user && user.role !== 'read_only';\n  \n  // Check if user can manage logs (admin or provisioner)\n  const canManageLogs = user && ['administrator', 'provisioner'].includes(user.role);\n\n  // Form state\n  const [formData, setFormData] = useState({\n    requestor_name: user?.full_name || '',\n    customer_name: '',\n    region: '',\n    exchange_id: '',\n    exchange_name: '',\n    feed_id: '',\n    feed_name: '',\n    desired_sell_price: '',\n    currency_requested: '',\n    order_entry_required: false,\n    delivery_datacenter: ''\n  });\n\n  // Data states\n  const [availableRegions, setAvailableRegions] = useState([]);\n  const [availableExchanges, setAvailableExchanges] = useState([]);\n  const [availableFeeds, setAvailableFeeds] = useState([]);\n  const [availableCurrencies, setAvailableCurrencies] = useState([]);\n  const [availableDatacenters, setAvailableDatacenters] = useState([]);\n\n  // UI states\n  const [loading, setLoading] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState('');\n  const [showHistory, setShowHistory] = useState(false);\n  \n  // History states\n  const [quoteHistory, setQuoteHistory] = useState([]);\n  const [historyLoading, setHistoryLoading] = useState(false);\n  const [historyPage, setHistoryPage] = useState(1);\n  const [historyTotal, setHistoryTotal] = useState(0);\n  const [historySearch, setHistorySearch] = useState('');\n  \n\n\n  // Load initial data\n  useEffect(() => {\n    loadRegions();\n    loadCurrencies();\n  }, []);\n\n  // Update requestor name when user changes\n  useEffect(() => {\n    if (user?.full_name) {\n      setFormData(prev => ({ ...prev, requestor_name: user.full_name }));\n    }\n  }, [user]);\n\n  // Validate form\n  useEffect(() => {\n    const isValid = formData.customer_name.trim() && \n                   formData.region && \n                   formData.exchange_id && \n                   formData.feed_id && \n                   formData.desired_sell_price && \n                   parseFloat(formData.desired_sell_price) > 0 &&\n                   formData.currency_requested && \n                   formData.delivery_datacenter &&\n                   (formData.order_entry_required === true || formData.order_entry_required === false);\n    \n    setFormValid(isValid);\n  }, [formData]);\n\n  const loadRegions = async () => {\n    try {\n      const regions = await exchangePricingApi.getRegions();\n      setAvailableRegions(regions);\n    } catch (error) {\n      console.error('Failed to load regions:', error);\n      setError('Failed to load available regions');\n    }\n  };\n\n  const loadExchanges = async (region) => {\n    try {\n      const exchanges = await exchangePricingApi.getExchanges(region);\n      setAvailableExchanges(exchanges);\n    } catch (error) {\n      console.error('Failed to load exchanges:', error);\n      setError('Failed to load exchanges for this region');\n    }\n  };\n\n  const loadFeeds = async (exchangeId) => {\n    try {\n      const feeds = await exchangePricingApi.getFeeds(exchangeId);\n      setAvailableFeeds(feeds);\n    } catch (error) {\n      console.error('Failed to load feeds:', error);\n      setError('Failed to load feeds for this exchange');\n    }\n  };\n\n  const loadCurrencies = async () => {\n    try {\n      const currencies = await exchangePricingApi.getCurrencies();\n      setAvailableCurrencies(currencies);\n    } catch (error) {\n      console.error('Failed to load currencies:', error);\n      setError('Failed to load available currencies');\n    }\n  };\n\n  const loadDatacenters = async (region) => {\n    try {\n      const datacenters = await exchangePricingApi.getDatacenters(region);\n      setAvailableDatacenters(datacenters);\n    } catch (error) {\n      console.error('Failed to load datacenters:', error);\n      setError('Failed to load datacenters for this region');\n    }\n  };\n\n  const loadQuoteHistory = async (page = 1, search = '') => {\n    setHistoryLoading(true);\n    try {\n      const response = await exchangePricingApi.getQuoteHistory({ page, limit: 10, search });\n      setQuoteHistory(response.quotes);\n      setHistoryTotal(response.totalCount);\n    } catch (error) {\n      console.error('Failed to load quote history:', error);\n      setError('Failed to load quote history');\n    } finally {\n      setHistoryLoading(false);\n    }\n  };\n\n  const loadAuditLogs = async () => {\n    setAuditLogsLoading(true);\n    try {\n      const logs = await exchangePricingApi.getAuditLogs({ limit: 100 });\n      setAuditLogs(logs);\n    } catch (error) {\n      console.error('Failed to load audit logs:', error);\n      setError('Failed to load pricing logs');\n    } finally {\n      setAuditLogsLoading(false);\n    }\n  };\n\n  const handleClearAuditLogs = async () => {\n    if (!window.confirm('Are you sure you want to clear all exchange pricing logs? This action cannot be undone.')) {\n      return;\n    }\n\n    try {\n      await exchangePricingApi.clearAuditLogs();\n      setAuditLogs([]);\n      setSuccess('Exchange pricing logs cleared successfully');\n    } catch (err) {\n      setError('Failed to clear pricing logs: ' + err.message);\n    }\n  };\n\n  const handleExportAuditLogs = () => {\n    try {\n      exchangePricingApi.exportAuditLogs();\n      setSuccess('Exchange pricing logs export started');\n    } catch (err) {\n      setError('Failed to export pricing logs: ' + err.message);\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    setError('');\n    \n    // Handle cascading dropdowns\n    if (field === 'region') {\n      // Reset dependent fields\n      setFormData(prev => ({ \n        ...prev, \n        region: value,\n        exchange_id: '', \n        exchange_name: '',\n        feed_id: '', \n        feed_name: '',\n        delivery_datacenter: ''\n      }));\n      setAvailableExchanges([]);\n      setAvailableFeeds([]);\n      setAvailableDatacenters([]);\n      \n      if (value) {\n        loadExchanges(value);\n        loadDatacenters(value);\n      }\n    } else if (field === 'exchange_id') {\n      const selectedExchange = availableExchanges.find(ex => ex.id === value);\n      setFormData(prev => ({ \n        ...prev, \n        exchange_id: value,\n        exchange_name: selectedExchange ? selectedExchange.exchange_name : '',\n        feed_id: '', \n        feed_name: ''\n      }));\n      setAvailableFeeds([]);\n      \n      if (value) {\n        loadFeeds(value);\n      }\n    } else if (field === 'feed_id') {\n      const selectedFeed = availableFeeds.find(feed => feed.id === value);\n      setFormData(prev => ({ \n        ...prev, \n        feed_id: value,\n        feed_name: selectedFeed ? selectedFeed.feed_name : ''\n      }));\n    }\n  };\n\n  const handleCheckResults = async () => {\n    if (!formValid) return;\n    \n    setLoading(true);\n    setError('');\n    setResults(null);\n    \n    try {\n      const result = await exchangePricingApi.createQuote(formData);\n      setResults(result);\n    } catch (error) {\n      console.error('Quote calculation failed:', error);\n      setError(error.response?.data?.error || 'Failed to calculate quote');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleResetForm = () => {\n    setFormData({\n      requestor_name: user?.full_name || '',\n      customer_name: '',\n      region: '',\n      exchange_id: '',\n      exchange_name: '',\n      feed_id: '',\n      feed_name: '',\n      desired_sell_price: '',\n      currency_requested: '',\n      order_entry_required: false,\n      delivery_datacenter: ''\n    });\n    setResults(null);\n    setError('');\n    setAvailableExchanges([]);\n    setAvailableFeeds([]);\n    setAvailableDatacenters([]);\n  };\n\n  const formatCurrency = (amount, currency) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency || 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  const convertFromUSD = (usdAmount, exchangeRate, targetCurrency) => {\n    if (targetCurrency === 'USD') {\n      return usdAmount;\n    }\n    return usdAmount * exchangeRate;\n  };\n\n  const handleEmailExport = () => {\n    if (!results) return;\n\n    const pricingDisclaimer = `\nAll Pricing is subject to IPC standard terms and conditions.\nThis quotation is valid for 90 days\nAll Pricing is budgetary and subject to finalised design, survey and facility/feasibility checks.\nAll Pricing is exclusive of any applicable Taxes and Surcharges.\nAny additional 3rd Party costs incurred on order of the service will be chargeable to the customer, including but not limited to cross connects, additional cabling, out of hours charges, etc\nUnless otherwise stated any additional costs incurred for out of hours work will be chargeable to the customer.\nBudgetary price is designed for wires only delivery. Customer to provide own cross connects to IPC market data environment.\n    `.trim();\n\n    const emailBody = `Exchange Feed Pricing Quote\n\n${results.approval_status}\n\nCustomer Name: ${results.customer_name}\nFeed: ${results.exchange_name} - ${results.feed_name}\nFeed NRC: ${formatCurrency(convertFromUSD(1000, results.exchange_rate, results.currency_requested), results.currency_requested)}\nDesired Sell Price: ${formatCurrency(results.desired_sell_price, results.currency_requested)}\nPass Through Fees: ${results.pass_through_fees && results.pass_through_fees > 0 ? 'Yes' : 'No'}\nISF A: ${results.isf_a || 'Not specified'}\nISF B: ${results.isf_b || 'Not specified'}\nBandwidth: ${results.bandwidth || 'Not specified'}${results.order_entry_required ? `\nOrder Entry NRC: ${formatCurrency(convertFromUSD(500, results.exchange_rate, results.currency_requested), results.currency_requested)}\nOrder Entry Cost: ${results.order_entry_cost ? formatCurrency(convertFromUSD(results.order_entry_cost, results.exchange_rate, results.currency_requested), results.currency_requested) : 'Not specified'}\nOrder Entry ISF: ${results.order_entry_isf || 'Not specified'}` : ''}\nDelivery Datacenter: ${results.delivery_datacenter}\n\n${pricingDisclaimer}`;\n\n    const subject = `${results.customer_name} - ${results.exchange_name} - ${results.feed_name} - Pricing`;\n    const mailtoUrl = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(emailBody)}`;\n    \n    window.open(mailtoUrl);\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Exchange Feed Pricing Tool\n      </Typography>\n      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom sx={{ mb: 3 }}>\n        Ensure corresponding QR is raised for pricing confirmation and design. Include requested sell price within QR.<br/>\n        Pricing valid for combined A + B feeds for delivery to IPC Tier 1 Datacenters within same region as feed source.<br/>\n        Order Entry is available for each listed market - Unicast 10Mb - Price dependant on market.<br/>\n        DR feeds may be available and further information is available via quoting process.<br/>\n        Retransmission included as standard if available<br/>\n        For detailed service standards, please see IPC Connexus Extranet standards or refer to your SE.\n      </Typography>\n\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n\n      <Grid container spacing={3}>\n        {/* Pricing Form */}\n        <Grid item xs={12} lg={8}>\n          <Card>\n            <CardHeader \n              title=\"Quote Request Form\" \n              action={\n                <Button \n                  variant=\"outlined\" \n                  size=\"small\" \n                  onClick={handleResetForm}\n                  startIcon={<RefreshIcon />}\n                >\n                  Reset\n                </Button>\n              }\n            />\n            <CardContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    fullWidth\n                    label=\"Requestor Name\"\n                    value={formData.requestor_name}\n                    InputProps={{ readOnly: true }}\n                    helperText=\"Auto-filled from your profile\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    fullWidth\n                    label=\"Customer Name\"\n                    value={formData.customer_name}\n                    onChange={(e) => handleInputChange('customer_name', e.target.value)}\n                    required\n                  />\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth required>\n                    <InputLabel>Select Region</InputLabel>\n                    <Select\n                      value={formData.region}\n                      label=\"Select Region\"\n                      onChange={(e) => handleInputChange('region', e.target.value)}\n                    >\n                      {availableRegions.map(region => (\n                        <MenuItem key={region} value={region}>{region}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth required disabled={!formData.region}>\n                    <InputLabel>Select Exchange</InputLabel>\n                    <Select\n                      value={formData.exchange_id}\n                      label=\"Select Exchange\"\n                      onChange={(e) => handleInputChange('exchange_id', e.target.value)}\n                    >\n                      {availableExchanges.map(exchange => (\n                        <MenuItem key={exchange.id} value={exchange.id}>\n                          {exchange.exchange_name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth required disabled={!formData.exchange_id}>\n                    <InputLabel>Select Feed</InputLabel>\n                    <Select\n                      value={formData.feed_id}\n                      label=\"Select Feed\"\n                      onChange={(e) => handleInputChange('feed_id', e.target.value)}\n                    >\n                      {availableFeeds.map(feed => (\n                        <MenuItem key={feed.id} value={feed.id}>\n                          {feed.feed_name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    fullWidth\n                    label=\"Desired Sell Price\"\n                    type=\"number\"\n                    inputProps={{ min: 0, step: 0.01 }}\n                    value={formData.desired_sell_price}\n                    onChange={(e) => handleInputChange('desired_sell_price', e.target.value)}\n                    required\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth required>\n                    <InputLabel>Currency Requested</InputLabel>\n                    <Select\n                      value={formData.currency_requested}\n                      label=\"Currency Requested\"\n                      onChange={(e) => handleInputChange('currency_requested', e.target.value)}\n                    >\n                      {availableCurrencies.map(currency => (\n                        <MenuItem key={currency.currency_code} value={currency.currency_code}>\n                          {currency.currency_code} - {currency.currency_name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={formData.order_entry_required}\n                        onChange={(e) => handleInputChange('order_entry_required', e.target.checked)}\n                      />\n                    }\n                    label=\"Order Entry Required\"\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth required disabled={!formData.region}>\n                    <InputLabel>Delivery Datacenter</InputLabel>\n                    <Select\n                      value={formData.delivery_datacenter}\n                      label=\"Delivery Datacenter\"\n                      onChange={(e) => handleInputChange('delivery_datacenter', e.target.value)}\n                    >\n                      {availableDatacenters.map(datacenter => (\n                        <MenuItem key={datacenter.location_code} value={datacenter.location_code}>\n                          {datacenter.location_code} - {datacenter.location_name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center' }}>\n                    <Button\n                      variant=\"contained\"\n                      size=\"large\"\n                      onClick={handleCheckResults}\n                      disabled={!formValid || loading}\n                      startIcon={loading ? <CircularProgress size={20} /> : <CalculateIcon />}\n                    >\n                      {loading ? 'Calculating...' : 'Check Results'}\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"large\"\n                      onClick={() => {\n                        setShowHistory(true);\n                        loadQuoteHistory(1, historySearch);\n                      }}\n                      startIcon={<HistoryIcon />}\n                    >\n                      View History\n                    </Button>\n                  </Box>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Results Panel */}\n        <Grid item xs={12} lg={4}>\n          {results && (\n            <Card>\n              <CardHeader \n                title=\"Quote Results\" \n                avatar={\n                  results.is_approved ? \n                    <CheckCircleIcon color=\"success\" /> : \n                    <CancelIcon color=\"error\" />\n                }\n                action={\n                  <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onClick={handleEmailExport}\n                    startIcon={<EmailIcon />}\n                  >\n                    Export to Email\n                  </Button>\n                }\n              />\n              <CardContent>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Alert \n                      severity={results.is_approved ? \"success\" : \"error\"}\n                      sx={{ mb: 2 }}\n                    >\n                      <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                        {results.is_approved ? \"Approved\" : \"Not Approved\"}\n                      </Typography>\n                    </Alert>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Customer Name</Typography>\n                    <Typography variant=\"body1\">{results.customer_name}</Typography>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Feed (Exchange Name - Feed Name)</Typography>\n                    <Typography variant=\"body1\">\n                      {results.exchange_name} - {results.feed_name}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Feed NRC</Typography>\n                    <Typography variant=\"body1\">\n                      {formatCurrency(convertFromUSD(1000, results.exchange_rate, results.currency_requested), results.currency_requested)}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Desired Sell Price</Typography>\n                    <Typography variant=\"body1\">\n                      {formatCurrency(results.desired_sell_price, results.currency_requested)}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Pass Through Fees</Typography>\n                    <Typography variant=\"body1\">\n                      {results.pass_through_fees && results.pass_through_fees > 0 ? 'Yes' : 'No'}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">ISF A</Typography>\n                    <Typography variant=\"body1\">{results.isf_a || 'Not specified'}</Typography>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">ISF B</Typography>\n                    <Typography variant=\"body1\">{results.isf_b || 'Not specified'}</Typography>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Bandwidth</Typography>\n                    <Typography variant=\"body1\">{results.bandwidth || 'Not specified'}</Typography>\n                  </Grid>\n\n                  {results.order_entry_required && (\n                    <Grid item xs={12}>\n                      <Typography variant=\"body2\" color=\"text.secondary\">Order Entry NRC</Typography>\n                      <Typography variant=\"body1\">\n                        {formatCurrency(convertFromUSD(500, results.exchange_rate, results.currency_requested), results.currency_requested)}\n                      </Typography>\n                    </Grid>\n                  )}\n\n                  {results.order_entry_required && (\n                    <>\n                      <Grid item xs={12}>\n                        <Typography variant=\"body2\" color=\"text.secondary\">Order Entry Cost</Typography>\n                        <Typography variant=\"body1\">\n                          {results.order_entry_cost ? formatCurrency(convertFromUSD(results.order_entry_cost, results.exchange_rate, results.currency_requested), results.currency_requested) : 'Not specified'}\n                        </Typography>\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Typography variant=\"body2\" color=\"text.secondary\">Order Entry ISF</Typography>\n                        <Typography variant=\"body1\">{results.order_entry_isf || 'Not specified'}</Typography>\n                      </Grid>\n                    </>\n                  )}\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">Delivery Datacenter</Typography>\n                    <Typography variant=\"body1\">{results.delivery_datacenter}</Typography>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          )}\n        </Grid>\n      </Grid>\n\n      {/* Quote History Dialog */}\n      <Dialog open={showHistory} onClose={() => setShowHistory(false)} maxWidth=\"lg\" fullWidth>\n        <DialogTitle>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n              Quote History\n              {canManageLogs && (\n                <Button\n                  variant=\"outlined\"\n                  color=\"error\"\n                  size=\"small\"\n                  onClick={handleClearQuoteHistory}\n                  startIcon={<DeleteIcon />}\n                >\n                  Clear History\n                </Button>\n              )}\n            </Box>\n            <TextField\n              size=\"small\"\n              placeholder=\"Search quotes...\"\n              value={historySearch}\n              onChange={(e) => setHistorySearch(e.target.value)}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  loadQuoteHistory(1, historySearch);\n                }\n              }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                )\n              }}\n            />\n          </Box>\n        </DialogTitle>\n        <DialogContent>\n          {historyLoading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <TableContainer component={Paper}>\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Date</TableCell>\n                      <TableCell>Customer</TableCell>\n                      <TableCell>Exchange</TableCell>\n                      <TableCell>Feed</TableCell>\n                      <TableCell>Sell Price</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Requestor</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {quoteHistory.map((quote) => (\n                      <TableRow key={quote.id}>\n                        <TableCell>{formatDate(quote.created_at)}</TableCell>\n                        <TableCell>{quote.customer_name}</TableCell>\n                        <TableCell>{quote.exchange_name}</TableCell>\n                        <TableCell>{quote.feed_name}</TableCell>\n                        <TableCell>\n                          {formatCurrency(quote.desired_sell_price, quote.currency_requested)}\n                        </TableCell>\n                        <TableCell>\n                          <Chip\n                            label={quote.is_approved ? 'Approved' : 'Not Approved'}\n                            color={quote.is_approved ? 'success' : 'error'}\n                            size=\"small\"\n                          />\n                        </TableCell>\n                        <TableCell>{quote.requestor_name}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n              {historyTotal > 10 && (\n                <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\n                  <Pagination\n                    count={Math.ceil(historyTotal / 10)}\n                    page={historyPage}\n                    onChange={(e, page) => {\n                      setHistoryPage(page);\n                      loadQuoteHistory(page, historySearch);\n                    }}\n                  />\n                </Box>\n              )}\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowHistory(false)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Pricing Logs Dialog */}\n      <Dialog open={showAuditLogs} onClose={() => setShowAuditLogs(false)} maxWidth=\"xl\" fullWidth>\n        <DialogTitle>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            Exchange Pricing Logs\n            <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\n              <Chip \n                label={`${auditLogs.length} entries`} \n                color=\"info\" \n                size=\"small\"\n              />\n              {canManageLogs && (\n                <>\n                  <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onClick={handleExportAuditLogs}\n                    startIcon={<DownloadIcon />}\n                  >\n                    Export CSV\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"error\"\n                    size=\"small\"\n                    onClick={handleClearAuditLogs}\n                    startIcon={<DeleteIcon />}\n                  >\n                    Clear Logs\n                  </Button>\n                </>\n              )}\n            </Box>\n          </Box>\n        </DialogTitle>\n        <DialogContent>\n          {auditLogsLoading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <TableContainer component={Paper}>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell><strong>Timestamp</strong></TableCell>\n                    <TableCell><strong>User</strong></TableCell>\n                    <TableCell><strong>Input Parameters</strong></TableCell>\n                    <TableCell><strong>Results Summary</strong></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {auditLogs.map((log) => (\n                    <TableRow key={log.id}>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {new Date(log.timestamp).toLocaleString()}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {log.user_name || 'Unknown User'}\n                        </Typography>\n                      </TableCell>\n                      <TableCell sx={{ maxWidth: 400 }}>\n                        {log.parameters && (\n                          <Box>\n                            <Typography variant=\"caption\"><strong>Customer:</strong> {log.parameters.customer_name}</Typography><br/>\n                            <Typography variant=\"caption\"><strong>Exchange:</strong> {log.parameters.exchange_name}</Typography><br/>\n                            <Typography variant=\"caption\"><strong>Feed:</strong> {log.parameters.feed_name}</Typography><br/>\n                            <Typography variant=\"caption\"><strong>Price:</strong> {formatCurrency(log.parameters.desired_sell_price, log.parameters.currency_requested)}</Typography><br/>\n                            <Typography variant=\"caption\"><strong>Order Entry:</strong> {log.parameters.order_entry_required ? 'Yes' : 'No'}</Typography>\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell sx={{ maxWidth: 300 }}>\n                        {log.pricing_data && log.pricing_data.calculationResults && (\n                          <Box>\n                            <Chip\n                              label={log.pricing_data.calculationResults.is_approved ? 'Approved' : 'Not Approved'}\n                              color={log.pricing_data.calculationResults.is_approved ? 'success' : 'error'}\n                              size=\"small\"\n                            /><br/>\n                            <Typography variant=\"caption\"><strong>USD Price:</strong> ${log.pricing_data.calculationResults.desired_sell_price_usd?.toFixed(2)}</Typography><br/>\n                            <Typography variant=\"caption\"><strong>Min Cost:</strong> ${log.pricing_data.calculationResults.feed_min_cost?.toFixed(2)}</Typography><br/>\n                            <Typography variant=\"caption\"><strong>Difference:</strong> ${log.pricing_data.calculationResults.price_difference?.toFixed(2)}</Typography>\n                          </Box>\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowAuditLogs(false)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default ExchangePricingTool; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}