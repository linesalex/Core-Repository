{"ast":null,"code":"import axios from 'axios';\nconst API_BASE = 'http://localhost:4000';\nexport const fetchRoutes = () => axios.get(`${API_BASE}/network_routes`).then(res => res.data);\nexport const searchRoutes = params => axios.get(`${API_BASE}/network_routes_search`, {\n  params\n}).then(res => res.data);\nexport const exportRoutesCSV = () => axios.get(`${API_BASE}/network_routes_export`, {\n  responseType: 'blob'\n});\nexport const addRoute = data => axios.post(`${API_BASE}/network_routes`, data);\nexport const editRoute = (circuit_id, data) => axios.put(`${API_BASE}/network_routes/${circuit_id}`, data);\nexport const deleteRoute = circuit_id => axios.delete(`${API_BASE}/network_routes/${circuit_id}`);\nexport const uploadKMZ = (circuit_id, file) => {\n  const formData = new FormData();\n  formData.append('kmz_file', file);\n  return axios.post(`${API_BASE}/network_routes/${circuit_id}/upload_kmz`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const fetchRoute = circuit_id => axios.get(`${API_BASE}/network_routes/${circuit_id}`).then(res => res.data);","map":{"version":3,"names":["axios","API_BASE","fetchRoutes","get","then","res","data","searchRoutes","params","exportRoutesCSV","responseType","addRoute","post","editRoute","circuit_id","put","deleteRoute","delete","uploadKMZ","file","formData","FormData","append","headers","fetchRoute"],"sources":["C:/Users/lines/OneDrive/Code/Core Repositary/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE = 'http://localhost:4000';\r\n\r\nexport const fetchRoutes = () => axios.get(`${API_BASE}/network_routes`).then(res => res.data);\r\n\r\nexport const searchRoutes = (params) => axios.get(`${API_BASE}/network_routes_search`, { params }).then(res => res.data);\r\n\r\nexport const exportRoutesCSV = () => axios.get(`${API_BASE}/network_routes_export`, { responseType: 'blob' });\r\n\r\nexport const addRoute = (data) => axios.post(`${API_BASE}/network_routes`, data);\r\n\r\nexport const editRoute = (circuit_id, data) => axios.put(`${API_BASE}/network_routes/${circuit_id}`, data);\r\n\r\nexport const deleteRoute = (circuit_id) => axios.delete(`${API_BASE}/network_routes/${circuit_id}`);\r\n\r\nexport const uploadKMZ = (circuit_id, file) => {\r\n  const formData = new FormData();\r\n  formData.append('kmz_file', file);\r\n  return axios.post(`${API_BASE}/network_routes/${circuit_id}/upload_kmz`, formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n  });\r\n};\r\n\r\nexport const fetchRoute = (circuit_id) => axios.get(`${API_BASE}/network_routes/${circuit_id}`).then(res => res.data); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAMF,KAAK,CAACG,GAAG,CAAC,GAAGF,QAAQ,iBAAiB,CAAC,CAACG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAE9F,OAAO,MAAMC,YAAY,GAAIC,MAAM,IAAKR,KAAK,CAACG,GAAG,CAAC,GAAGF,QAAQ,wBAAwB,EAAE;EAAEO;AAAO,CAAC,CAAC,CAACJ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAExH,OAAO,MAAMG,eAAe,GAAGA,CAAA,KAAMT,KAAK,CAACG,GAAG,CAAC,GAAGF,QAAQ,wBAAwB,EAAE;EAAES,YAAY,EAAE;AAAO,CAAC,CAAC;AAE7G,OAAO,MAAMC,QAAQ,GAAIL,IAAI,IAAKN,KAAK,CAACY,IAAI,CAAC,GAAGX,QAAQ,iBAAiB,EAAEK,IAAI,CAAC;AAEhF,OAAO,MAAMO,SAAS,GAAGA,CAACC,UAAU,EAAER,IAAI,KAAKN,KAAK,CAACe,GAAG,CAAC,GAAGd,QAAQ,mBAAmBa,UAAU,EAAE,EAAER,IAAI,CAAC;AAE1G,OAAO,MAAMU,WAAW,GAAIF,UAAU,IAAKd,KAAK,CAACiB,MAAM,CAAC,GAAGhB,QAAQ,mBAAmBa,UAAU,EAAE,CAAC;AAEnG,OAAO,MAAMI,SAAS,GAAGA,CAACJ,UAAU,EAAEK,IAAI,KAAK;EAC7C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,IAAI,CAAC;EACjC,OAAOnB,KAAK,CAACY,IAAI,CAAC,GAAGX,QAAQ,mBAAmBa,UAAU,aAAa,EAAEM,QAAQ,EAAE;IACjFG,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIV,UAAU,IAAKd,KAAK,CAACG,GAAG,CAAC,GAAGF,QAAQ,mBAAmBa,UAAU,EAAE,CAAC,CAACV,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}