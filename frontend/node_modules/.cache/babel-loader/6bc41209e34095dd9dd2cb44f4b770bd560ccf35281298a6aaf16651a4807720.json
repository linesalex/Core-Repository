{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lines\\\\OneDrive\\\\Code\\\\Core Repositary\\\\frontend\\\\src\\\\NetworkRoutesTable.js\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'location_a',\n  label: 'Location A'\n}, {\n  id: 'location_b',\n  label: 'Location B'\n}, {\n  id: 'circuit_id',\n  label: 'UCN'\n}, {\n  id: 'expected_latency',\n  label: 'Expected Latency'\n}, {\n  id: 'live_latency',\n  label: 'Live Latency'\n}, {\n  id: 'bandwidth',\n  label: 'Bandwidth'\n}, {\n  id: 'underlying_carrier',\n  label: 'Underlying Carrier'\n}, {\n  id: 'cable_system',\n  label: 'Cable System'\n}, {\n  id: 'is_special',\n  label: 'Special/ULL'\n}, {\n  id: 'kmz_file_path',\n  label: 'KMZ File'\n}, {\n  id: 'test_results_link',\n  label: 'Test Results'\n}, {\n  id: 'outage_tickets_last_30d',\n  label: 'Outage Tickets (30d)'\n}, {\n  id: 'maintenance_tickets_last_30d',\n  label: 'Maintenance Tickets (30d)'\n}, {\n  id: 'more_details',\n  label: 'More Details'\n}];\nconst textCellStyle = {\n  maxWidth: 220,\n  maxHeight: 80,\n  overflow: 'auto',\n  whiteSpace: 'pre-line',\n  wordBreak: 'break-word',\n  padding: '6px 8px'\n};\nconst SmallTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  fontSize: '0.75rem',\n  // ~12px, 2pt smaller than default\n  padding: '6px 8px'\n}));\n_c = SmallTableCell;\nconst SmallTableHeaderCell = styled(TableCell)(({\n  theme\n}) => ({\n  fontSize: '0.8125rem',\n  // ~13px, 2pt smaller than default header\n  fontWeight: 600,\n  padding: '6px 8px'\n}));\n_c2 = SmallTableHeaderCell;\nfunction NetworkRoutesTable({\n  rows,\n  onMoreDetails,\n  onSelectRow,\n  selectedRow,\n  onOpenDarkFiber\n}) {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: columns.map(col => /*#__PURE__*/_jsxDEV(SmallTableHeaderCell, {\n            children: col.label\n          }, col.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          hover: true,\n          selected: selectedRow && selectedRow.circuit_id === row.circuit_id,\n          onClick: () => onSelectRow && onSelectRow(row),\n          style: {\n            cursor: onSelectRow ? 'pointer' : 'default'\n          },\n          children: columns.map(col => {\n            if (col.id === 'more_details') {\n              return /*#__PURE__*/_jsxDEV(SmallTableCell, {\n                style: textCellStyle,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    onMoreDetails(row);\n                  },\n                  children: \"More Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this)\n              }, col.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this);\n            }\n            if (col.id === 'bandwidth' && row.bandwidth === 'Dark Fiber') {\n              return /*#__PURE__*/_jsxDEV(SmallTableCell, {\n                style: textCellStyle,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  size: \"small\",\n                  color: \"secondary\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    onOpenDarkFiber(row.circuit_id);\n                  },\n                  children: \"Dark Fiber Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this)\n              }, col.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this);\n            }\n            // For text-heavy columns, apply scrollable style\n            const textHeavy = ['test_results_link', 'cable_system', 'underlying_carrier', 'location_a', 'location_b', 'bandwidth', 'more_details'];\n            return /*#__PURE__*/_jsxDEV(SmallTableCell, {\n              style: textHeavy.includes(col.id) ? textCellStyle : {},\n              children: col.id === 'is_special' ? row[col.id] ? 'Yes' : 'No' : row[col.id]\n            }, col.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this);\n          })\n        }, row.circuit_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c3 = NetworkRoutesTable;\nexport default NetworkRoutesTable;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SmallTableCell\");\n$RefreshReg$(_c2, \"SmallTableHeaderCell\");\n$RefreshReg$(_c3, \"NetworkRoutesTable\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","styled","jsxDEV","_jsxDEV","columns","id","label","textCellStyle","maxWidth","maxHeight","overflow","whiteSpace","wordBreak","padding","SmallTableCell","theme","fontSize","_c","SmallTableHeaderCell","fontWeight","_c2","NetworkRoutesTable","rows","onMoreDetails","onSelectRow","selectedRow","onOpenDarkFiber","component","children","size","map","col","fileName","_jsxFileName","lineNumber","columnNumber","row","hover","selected","circuit_id","onClick","style","cursor","variant","e","stopPropagation","bandwidth","color","textHeavy","includes","_c3","$RefreshReg$"],"sources":["C:/Users/lines/OneDrive/Code/Core Repositary/frontend/src/NetworkRoutesTable.js"],"sourcesContent":["import React from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst columns = [\r\n  { id: 'location_a', label: 'Location A' },\r\n  { id: 'location_b', label: 'Location B' },\r\n  { id: 'circuit_id', label: 'UCN' },\r\n  { id: 'expected_latency', label: 'Expected Latency' },\r\n  { id: 'live_latency', label: 'Live Latency' },\r\n  { id: 'bandwidth', label: 'Bandwidth' },\r\n  { id: 'underlying_carrier', label: 'Underlying Carrier' },\r\n  { id: 'cable_system', label: 'Cable System' },\r\n  { id: 'is_special', label: 'Special/ULL' },\r\n  { id: 'kmz_file_path', label: 'KMZ File' },\r\n  { id: 'test_results_link', label: 'Test Results' },\r\n  { id: 'outage_tickets_last_30d', label: 'Outage Tickets (30d)' },\r\n  { id: 'maintenance_tickets_last_30d', label: 'Maintenance Tickets (30d)' },\r\n  { id: 'more_details', label: 'More Details' },\r\n];\r\n\r\nconst textCellStyle = {\r\n  maxWidth: 220,\r\n  maxHeight: 80,\r\n  overflow: 'auto',\r\n  whiteSpace: 'pre-line',\r\n  wordBreak: 'break-word',\r\n  padding: '6px 8px',\r\n};\r\n\r\nconst SmallTableCell = styled(TableCell)(({ theme }) => ({\r\n  fontSize: '0.75rem', // ~12px, 2pt smaller than default\r\n  padding: '6px 8px',\r\n}));\r\n\r\nconst SmallTableHeaderCell = styled(TableCell)(({ theme }) => ({\r\n  fontSize: '0.8125rem', // ~13px, 2pt smaller than default header\r\n  fontWeight: 600,\r\n  padding: '6px 8px',\r\n}));\r\n\r\nfunction NetworkRoutesTable({ rows, onMoreDetails, onSelectRow, selectedRow, onOpenDarkFiber }) {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(col => (\r\n              <SmallTableHeaderCell key={col.id}>{col.label}</SmallTableHeaderCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow\r\n              key={row.circuit_id}\r\n              hover\r\n              selected={selectedRow && selectedRow.circuit_id === row.circuit_id}\r\n              onClick={() => onSelectRow && onSelectRow(row)}\r\n              style={{ cursor: onSelectRow ? 'pointer' : 'default' }}\r\n            >\r\n              {columns.map(col => {\r\n                if (col.id === 'more_details') {\r\n                  return (\r\n                    <SmallTableCell key={col.id} style={textCellStyle}>\r\n                      <Button variant=\"outlined\" size=\"small\" onClick={e => { e.stopPropagation(); onMoreDetails(row); }}>\r\n                        More Details\r\n                      </Button>\r\n                    </SmallTableCell>\r\n                  );\r\n                }\r\n                if (col.id === 'bandwidth' && row.bandwidth === 'Dark Fiber') {\r\n                  return (\r\n                    <SmallTableCell key={col.id} style={textCellStyle}>\r\n                      <Button variant=\"contained\" size=\"small\" color=\"secondary\" onClick={e => { e.stopPropagation(); onOpenDarkFiber(row.circuit_id); }}>\r\n                        Dark Fiber Details\r\n                      </Button>\r\n                    </SmallTableCell>\r\n                  );\r\n                }\r\n                // For text-heavy columns, apply scrollable style\r\n                const textHeavy = [\r\n                  'test_results_link',\r\n                  'cable_system',\r\n                  'underlying_carrier',\r\n                  'location_a',\r\n                  'location_b',\r\n                  'bandwidth',\r\n                  'more_details',\r\n                ];\r\n                return (\r\n                  <SmallTableCell key={col.id} style={textHeavy.includes(col.id) ? textCellStyle : {}}>\r\n                    {col.id === 'is_special' ? (row[col.id] ? 'Yes' : 'No') : row[col.id]}\r\n                  </SmallTableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default NetworkRoutesTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}